{
	"name": "df_CreateTerms",
	"properties": {
		"description": "This is the Create Terms dataflow and include lookups to the TermTypeTable in the Taxonomy db.",
		"folder": {
			"name": "CreateTerms"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ThesaurusTerms",
						"type": "DatasetReference"
					},
					"name": "ThesaurusTerms"
				},
				{
					"dataset": {
						"referenceName": "TaxonomyTerms",
						"type": "DatasetReference"
					},
					"name": "TaxonomyTerms"
				},
				{
					"dataset": {
						"referenceName": "TermTypeSink",
						"type": "DatasetReference"
					},
					"name": "TermTypes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TaxonomyTermsInsert",
						"type": "DatasetReference"
					},
					"name": "TaxonomyTermsInsert"
				},
				{
					"dataset": {
						"referenceName": "TaxonomyTermsInsert",
						"type": "DatasetReference"
					},
					"name": "DeleteSink"
				},
				{
					"dataset": {
						"referenceName": "TaxonomyTermsInsert",
						"type": "DatasetReference"
					},
					"name": "UpdateTerm"
				}
			],
			"script": "\n\nsource(output(\n\t\tDimID as integer,\n\t\tDimName as string,\n\t\tRootID as integer,\n\t\tDimPreferred as boolean,\n\t\tDimSourceID as integer,\n\t\tDimDescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ThesaurusTerms\nsource(output(\n\t\tTermID as integer,\n\t\tTermDimID as integer,\n\t\tTermCode as string,\n\t\tTermName as string,\n\t\tTermDescription as string,\n\t\tTermPreferred as boolean,\n\t\tAvailable as boolean,\n\t\tTermTypeID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TaxonomyTerms\nsource(output(\n\t\tTermTypeID as integer,\n\t\tTypeName as string,\n\t\tDescription as string,\n\t\tAvailable as boolean,\n\t\tDimTable as string,\n\t\tSourceID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TermTypes\nThesaurusTerms derive(PossibleTypeID = toShort(DimID)) ~> ConvertDimIDToTypeID\nConvertDimIDToTypeID, TermTypes join(DimName == TypeName\n\t&& DimSourceID == SourceID\n\t&& PossibleTypeID == TermTypeID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> LookupTypesWithDimID\nSelectFromLookup, TaxonomyTerms join(DimID == TermDimID,\n\tjoinType:'outer',\n\tpartitionBy('roundRobin', 2),\n\tbroadcast: 'none')~> MergeJoin\nSelect1 split(isNull(DimID),\n\tisNull(TermID),\n\tdisjoint: true) ~> ConditionalSplit1@(Delete, Insert, Default)\nConditionsForSoftDelete select(mapColumn(\n\t\tDimPreferred,\n\t\tDimID,\n\t\tTermCode,\n\t\tTermName,\n\t\tTermDescription,\n\t\tTermPreferred,\n\t\tAvailable,\n\t\tTermTypeID\n\t)) ~> SelectForDelete\nConditionalSplit1@Delete derive(Available = false()) ~> AddAvailableCol\nAddAvailableCol alterRow(updateIf(isNull(DimID))) ~> ConditionsForSoftDelete\nConditionalSplit1@Default derive(DimTypeName = left(DimName, 80),\n\t\tDimTypeDescription = left(DimDescription, 500)) ~> ConvertNameAndDesc\nDerivedColumn1 alterRow(updateIf(not(DimName==TermName&&((DimPreferred==TermPreferred)&&(DimDescription==TermDescription))))) ~> ConditionsForUpdate\nConditionsForUpdate select(mapColumn(\n\t\tDimPreferred,\n\t\tDimID,\n\t\tTermCode,\n\t\tTermName,\n\t\tDimDescription,\n\t\tTermPreferred,\n\t\tTermTypeID,\n\t\tTermID,\n\t\tTermDescription\n\t)) ~> SelectForUpdate\nConditionalSplit1@Insert derive(Available = true(),\n\t\tRootTypeID = toShort(RootID)) ~> SetAvailable\nSetAvailable, TermTypes join(RootID == TermTypes@TermTypeID,\n\tjoinType:'inner',\n\tpartitionBy('roundRobin', 2),\n\tbroadcast: 'none')~> LookupTypeWithRootID\nLookupTypesWithDimID select(mapColumn(\n\t\tDimID,\n\t\tRootID,\n\t\tDimPreferred,\n\t\tDimDescription,\n\t\tPossibleTypeID,\n\t\tDimName,\n\t\tDimSourceID\n\t)) ~> SelectFromLookup\nLookupTypeWithRootID alterRow(insertIf(not(isNull(DimID)))) ~> ConditionsForInsertion\nConditionsForInsertion select(mapColumn(\n\t\tDimPreferred,\n\t\tDimDescription,\n\t\tDimName,\n\t\tTermCode,\n\t\tAvailable = SetAvailable@Available,\n\t\tTermTypeID = TermTypes@TermTypeID\n\t)) ~> SelectForInsertion\nMergeJoin select(mapColumn(\n\t\tDimID,\n\t\tRootID,\n\t\tDimPreferred,\n\t\tDimDescription,\n\t\tDimName,\n\t\tDimSourceID,\n\t\tTermID,\n\t\tTermDimID,\n\t\tTermCode,\n\t\tTermName,\n\t\tTermDescription,\n\t\tTermPreferred,\n\t\tTermTypeID\n\t)) ~> Select1\nConvertNameAndDesc derive(DimPreferred = iif(isNull(DimPreferred), false(), DimPreferred),\n\t\tTermPreferred = iif(isNull(TermPreferred), false(), TermPreferred),\n\t\tDimTypeDescription = iif(isNull(DimTypeDescription), ' ', DimTypeDescription),\n\t\tTermDescription = iif(isNull(TermDescription), ' ', TermDescription)) ~> DerivedColumn1\nSelectForInsertion sink(input(\n\t\tTermID as integer,\n\t\tDimID as integer,\n\t\tTermCode as string,\n\t\tTermName as string,\n\t\tDescription as string,\n\t\tPreferred as boolean,\n\t\tAvailable as boolean,\n\t\tTermTypeID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tDimID = TermTypeID,\n\t\tTermCode,\n\t\tTermName = DimName,\n\t\tDescription = DimDescription,\n\t\tPreferred = DimPreferred,\n\t\tAvailable,\n\t\tTermTypeID\n\t)) ~> TaxonomyTermsInsert\nSelectForDelete sink(input(\n\t\tTermID as integer,\n\t\tDimID as integer,\n\t\tTermCode as string,\n\t\tTermName as string,\n\t\tDescription as string,\n\t\tPreferred as boolean,\n\t\tAvailable as boolean,\n\t\tTermTypeID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['DimID'],\n\tmapColumn(\n\t\tDimID,\n\t\tTermCode,\n\t\tTermName,\n\t\tDescription = TermDescription,\n\t\tPreferred = DimPreferred,\n\t\tAvailable,\n\t\tTermTypeID\n\t)) ~> DeleteSink\nSelectForUpdate sink(input(\n\t\tTermID as integer,\n\t\tDimID as integer,\n\t\tTermCode as string,\n\t\tTermName as string,\n\t\tDescription as string,\n\t\tPreferred as boolean,\n\t\tAvailable as boolean,\n\t\tTermTypeID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['TermID'],\n\tmapColumn(\n\t\tTermID,\n\t\tDimID,\n\t\tTermCode,\n\t\tTermName,\n\t\tDescription = TermDescription,\n\t\tPreferred = DimPreferred,\n\t\tTermTypeID\n\t)) ~> UpdateTerm"
		}
	}
}