{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GetDimRelationship",
						"type": "DatasetReference"
					},
					"name": "GetDimRelationship",
					"script": "source(output(\n\t\tXDimID as integer,\n\t\tYDimID as integer,\n\t\tDimKindID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> GetDimRelationship"
				},
				{
					"dataset": {
						"referenceName": "TermRelationship",
						"type": "DatasetReference"
					},
					"name": "TermRelationships",
					"script": "source(output(\n\t\tRelationshipID as integer,\n\t\tXTermID as integer,\n\t\tXTermDimID as integer,\n\t\tYTermID as integer,\n\t\tYTermDimID as integer,\n\t\tTermKindID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> TermRelationships"
				},
				{
					"dataset": {
						"referenceName": "ds_CreateLookupTable",
						"type": "DatasetReference"
					},
					"name": "LookupTable",
					"script": "source(output(\n\t\tTermID as integer,\n\t\tDimID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tquery: 'SELECT Term.TermID, Term.DimID FROM dbo.intermediateTerm Term',\n\tformat: 'query') ~> LookupTable"
				}
			],
			"sinks": [
				{
					"name": "sink1",
					"script": "AlterRow1 sink() ~> sink1"
				}
			],
			"transformations": [
				{
					"name": "MergeJoin",
					"script": "GetDimRelationship, TermRelationships join(XDimID == XTermDimID\n\t&& YDimID == YTermDimID\n\t&& DimKindID == TermKindID,\n\tjoinType:'outer',\n\tbroadcast: 'none')~> MergeJoin"
				},
				{
					"name": "ConditionalSplit",
					"script": "MergeJoin split(isNull(XTermID),\n\tdisjoint: true) ~> ConditionalSplit@(Insert, UpdateDoNothing)"
				},
				{
					"name": "Join1",
					"script": "ConditionalSplit@Insert, LookupTable join(XDimID == DimID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1"
				},
				{
					"name": "Select1",
					"script": "Join1 select(mapColumn(\n\t\tXDimID,\n\t\tYDimID,\n\t\tDimKindID,\n\t\tRelationshipID,\n\t\tXTermDimID,\n\t\tYTermID,\n\t\tYTermDimID,\n\t\tTermKindID,\n\t\tXTermID = TermID\n\t))~> Select1"
				},
				{
					"name": "Join2",
					"script": "Select1, LookupTable join(YDimID == DimID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join2"
				},
				{
					"name": "Select2",
					"script": "Join2 select(mapColumn(\n\t\tXDimID,\n\t\tYDimID,\n\t\tDimKindID,\n\t\tRelationshipID,\n\t\tXTermDimID,\n\t\tYTermDimID,\n\t\tTermKindID,\n\t\tXTermID,\n\t\tYTermID = TermID\n\t))~> Select2"
				},
				{
					"name": "AlterRow1",
					"script": "Select2 alterRow(insertIf(not(isNull(YTermID)))) ~> AlterRow1"
				}
			]
		}
	}
}