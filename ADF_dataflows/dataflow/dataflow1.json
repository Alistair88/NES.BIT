{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GetDimRelationship",
						"type": "DatasetReference"
					},
					"name": "GetDimRelationship",
					"script": "source(output(\n\t\tXDimID as integer,\n\t\tYDimID as integer,\n\t\tDimKindID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> GetDimRelationship"
				},
				{
					"dataset": {
						"referenceName": "TermRelationship",
						"type": "DatasetReference"
					},
					"name": "TermRelationships",
					"script": "source(output(\n\t\tRelationshipID as integer,\n\t\tXTermID as integer,\n\t\tXTermDimID as integer,\n\t\tYTermID as integer,\n\t\tYTermDimID as integer,\n\t\tTermKindID as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> TermRelationships"
				},
				{
					"dataset": {
						"referenceName": "ds_CreateLookupTable",
						"type": "DatasetReference"
					},
					"name": "LookupTable",
					"script": "source(output(\n\t\tTermID as integer,\n\t\tDimID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tquery: 'SELECT Term.TermID, Term.DimID FROM dbo.intermediateTerm Term',\n\tformat: 'query') ~> LookupTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TermRelationshipSink",
						"type": "DatasetReference"
					},
					"name": "InsertRelationship",
					"script": "MarkForInsertion sink(input(\n\t\tRelationshipID as integer,\n\t\tTermXID as integer,\n\t\tTermYID as integer,\n\t\tKindID as integer,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tTermXID = XTermID,\n\t\tTermYID = TermID,\n\t\tKindID = DimKindID,\n\t\tRelationshipID\n\t)) ~> InsertRelationship"
				}
			],
			"transformations": [
				{
					"name": "MergeJoin",
					"script": "GetDimRelationship, TermRelationships join(XDimID == XTermDimID\n\t&& YDimID == YTermDimID\n\t&& DimKindID == TermKindID,\n\tjoinType:'outer',\n\tbroadcast: 'none')~> MergeJoin"
				},
				{
					"name": "ConditionalSplit",
					"script": "MergeJoin split(isNull(XTermID),\n\tisNull(XDimID),\n\tdisjoint: true) ~> ConditionalSplit@(Insert, Delete, UpdateDoNothing)"
				},
				{
					"name": "Select1",
					"script": "LookupXTerm select(mapColumn(\n\t\tYDimID,\n\t\tDimKindID,\n\t\tRelationshipID,\n\t\tXTermID = LookupTable@TermID,\n\t\tYTermID,\n\t\tXDimID\n\t))~> Select1"
				},
				{
					"name": "Select2",
					"script": "LookupYTerm select(mapColumn(\n\t\tYDimID,\n\t\tDimKindID,\n\t\tRelationshipID,\n\t\tXTermID,\n\t\tYTermID,\n\t\tTermID,\n\t\tDimID\n\t))~> Select2"
				},
				{
					"name": "LookupYTerm",
					"script": "Select1, LookupTable join(YDimID == DimID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> LookupYTerm"
				},
				{
					"name": "MarkForInsertion",
					"script": "Filter3 alterRow(insertIf(not(isNull(XTermID)))) ~> MarkForInsertion"
				},
				{
					"name": "Filter3",
					"script": "Select2 filter(not(isNull(YTermID))) ~> Filter3"
				},
				{
					"name": "LookupXTerm",
					"script": "ConditionalSplit@Insert, LookupTable lookup(XDimID == DimID,\n\tbroadcast: 'none')~> LookupXTerm"
				}
			]
		}
	}
}