{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "nesbittestfactory-2003190950"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CreateThesaurusTerms_Dim_Source')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to create the Thesaurus Terms (Dim) Source dataset for use in the CreateTerms dataflow",
				"activities": [
					{
						"name": "CreateThesaurusTerms_Dim_SourceTable",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT CAST(Term.id AS BIGINT)  DimID, \n       CAST(Term.name AS NVARCHAR(200)) DimName, \n       dbo.GetRootParent(Term.id) RootID,\n       CAST(CASE ISNULL(Relation.relationship, 0)\n          WHEN 0 THEN 1\n          ELSE 0\n          END AS BIT) DimPreferred,\n       CAST(2 AS SMALLINT) DimSourceID,\n       CAST(RTRIM(Term.scope + ' ' + Term.additionalnotes) AS NVARCHAR(500)) DimDescription\n  from dbo.Term\n   LEFT JOIN dbo.Relation ON Relation.relatedtermid = Term.id AND Relation.relationship=2\n  ORDER BY DimID"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "LocalTermsTableOnThesaurus",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ThesaurusTerms_Dim_SourceOnAzure",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "CreateTerms"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunAllDataflows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Run all PortThesaurus dataflows",
				"activities": [
					{
						"name": "df_PortThesaurusTerms",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "LocalToDboTermType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CreateTermTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_PortThesaurusTerms",
								"type": "DataFlowReference"
							}
						}
					},
					{
						"name": "df_CreateTerms",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ExecuteCreateTaxonomyTermsSource",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ExecuteCreateThesaurus_Dim_Source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_CreateTerms",
								"type": "DataFlowReference"
							}
						}
					},
					{
						"name": "df_CreateRelationships",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Executepl_CreateTermRelationshipsSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_CreateRelationships",
								"type": "DataFlowReference"
							}
						}
					},
					{
						"name": "df_MergeTurasDimensions",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ExecutePl_CreateTurasDimensionTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ExecutePl_CreateTaxonomyDimensionTerms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_MergeTurasDimensions",
								"type": "DataFlowReference"
							}
						}
					},
					{
						"name": "df_MergePortfolioDimensions",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UpdatePortfolioDimensions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ExecuteCreateTaxonomyDimensionTerms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_MergePortfolioDimensions",
								"type": "DataFlowReference"
							}
						}
					},
					{
						"name": "ExecuteCreateTaxonomyTermsSource",
						"description": "Create the Taxonomy terms source tab using a query.",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_PortThesaurusTerms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CreateTaxonomyTermsSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "UpdatePortfolioDimensions",
						"description": "Update the Portfolio Dimensions table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_MergeTurasDimensions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_GetDataFromPortfolioDimensionTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "LocalToDboTermType",
						"description": "Create the TermType table on the Azure DB using a query.",
						"type": "ExecutePipeline",
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyLocalToTermTypeSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "CreateTermTable",
						"description": "Create the term table using a query.",
						"type": "ExecutePipeline",
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_LocalToAzureDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "Executepl_CreateTermRelationshipsSource",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_CreateTerms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CreateTermRelationshipsSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "ExecutePl_CreateTurasDimensionTables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_CreateRelationships",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CreateTurasDimensionTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "ExecutePl_CreateTaxonomyDimensionTerms",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_CreateRelationships",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CreateTaxonomyDimensionTerms",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "ExecuteRunMergePortfolioDimensions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_MergePortfolioDimensions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RunMergePortfolioDimensions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "ExecuteCreateTaxonomyDimensionTerms",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_MergeTurasDimensions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CreateTaxonomyDimensionTerms",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "ExecuteCreateThesaurus_Dim_Source",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_PortThesaurusTerms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CreateThesaurusTerms_Dim_Source",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "RunAllDataflows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CreateThesaurusTerms_Dim_Source')]"
			]
		}
	]
}